/*!
 * Copyright (c) 2018 by The Funland Project Developers.
 * Some rights reserved.
 *
 * Licensed under the MIT License.
 * See LICENSE file in the project root for full license information.
 */

/* @flow */

import type { HK } from "funland"
import { Apply } from "funland"
import { Equiv } from "./equiv"
import { FunctorLaws } from "./functor"

declare export class ApplyLaws<F> extends FunctorLaws<F> {
  +F: Apply<F>;
  constructor(F: Apply<F>): ApplyLaws<F>;
  applyComposition<A, B, C>(fa: HK<F, A>, fab: HK<F, (a: A) => B>, fbc: HK<F, (b: B) => C>): Equiv<HK<F, C>>;
}
