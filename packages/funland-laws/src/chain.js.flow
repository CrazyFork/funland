/*!
 * Copyright (c) 2018 by The Funland Project Developers.
 * Some rights reserved.
 *
 * Licensed under the MIT License.
 * See LICENSE file in the project root for full license information.
 */

/* @flow */

import type { HK, Chain } from "funland"
import { Equiv } from "./equiv"
import { ApplyLaws } from "./apply"

declare export class ChainLaws<F> extends ApplyLaws<F> {
  +F: Chain<F>;
  constructor(F: Chain<F>): Chain<F>;
  chainAssociativity<A, B, C>(fa: HK<F, A>, f: (a: A) => HK<F, B>, g: (b: B) => HK<F, C>): Equiv<HK<F, C>>;
  chainConsistentApply<A, B>(fa: HK<F, A>, fab: HK<F, (a: A) => B>): Equiv<HK<F, B>>;
}
