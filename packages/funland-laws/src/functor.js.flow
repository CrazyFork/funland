/*!
 * Copyright (c) 2018 by The Funland Project Developers.
 * Some rights reserved.
 *
 * Licensed under the MIT License.
 * See LICENSE file in the project root for full license information.
 */

/* @flow */

import type { HK } from "funland"
import { Functor } from "funland";
import { Equiv } from "./equiv";

declare export class FunctorLaws<F> {
  +F: Functor<F>;
  constructor(F: Functor<F>): FunctorLaws<F>;
  identity<A>(fa: HK<F, A>, f: (a: A) => A): Equiv<HK<F, A>>;
  composition<A, B, C>(fa: HK<F, A>, f: (a: B) => C, g: (a: A) => B): Equiv<HK<F, C>>;
}
